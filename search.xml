<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>你好，李焕英</title>
      <link href="2021/04/07/ni-hao-li-huan-ying-ying-ping/"/>
      <url>2021/04/07/ni-hao-li-huan-ying-ying-ping/</url>
      
        <content type="html"><![CDATA[<blockquote><p>1.你以为你已经很爱很爱妈妈了，但妈妈远比你想象中更爱更爱更爱你。</p><p>2.父母在时，尚有来处。父母不在，只剩归途。</p><p>——引用自<a href="https://www.zhihu.com/question/441478426">知乎</a>回答</p></blockquote><p><img src="https://ae03.alicdn.com/kf/H138bd5db93b74dd094bedcf95483a6b50.png" alt="《你好,李焕英》电影海报"></p><p>2021年的贺岁档包括《唐探3》、《刺杀小说家》、《你好，李焕英》等，其实给谁都无法预知到《李焕英》会在两个月后为贺岁档票房第一，国内票房榜第二，创造了历史。考虑到去年疫情的影响，电影《你好，李焕英》无疑是最大赢家。在刚看完电影的时候，甚至还保持了一丝”时势造英雄“的态度。而在更深层次了解电影细节以及贾玲人生故事后，对电影本身也有了不同的认识。</p><p><img src="https://ae03.alicdn.com/kf/H48ed082fdbee4dde894da7fdb26726f0A.png" alt="剧照"></p><p><strong>”可能别人比我导的好，但没人比我更了解李焕英“</strong></p><p>贾玲想以电影寄托自己对母亲的思念，在2016年的同名小品中就能够看得出，在小品的最后，贾玲一句”妈，我想你了“，可以说表演张力与真情实感的交融触动了现场很多人，连一同参赛的岳云鹏也连连称赞。而作为演员跨界成为电影导演，贾玲不是第一人，她也并不是为了利益而选择做导演，甚至在春节贺岁档上映前，她自己都不确定这部电影能够收获多少，还表示如果自己的电影票房破30亿了，自己将减肥瘦成一道闪电。</p><p>电影中有许多值得夸赞的细节处理，例如开头贾玲从天而降压在了年轻时李焕英身上，给观众一种为什么会压在人身上的诧异感，直到电影最后向观众解释了是同样穿越了的李焕英想要接住贾晓玲，喊着“我宝！”就不顾一切的冲了过去，也是众多让人泪奔的细节之一。作为母亲，时时刻刻都会想着孩子，这种思虑会超过对自己的关心。</p><p><strong>“可是我妈还不会补裤子啊”</strong></p><p><img src="https://ae05.alicdn.com/kf/Hd3811ba6469b481e9713edc7b2cce40a0.png" alt="剧照"></p><p>作为一部穿越题材的电影，其实选用做梦的方式开始，这种剧情安排是比较老套的，07年周杰伦自导自演的电影《不能说的秘密》以独特的钢琴演奏为媒介来实现时空的交错穿越，与之相比，《你好，李焕英》在这一点不可谓不简陋。</p><p>电影选择以做梦的形式展开，发展到接近尾声时，主角惊讶地发现“可是我妈还不会补裤子啊”，以常人所能理解的“梦中错误”的形式，让观众以为主角即将惊醒，那种似真似梦的交叉融入，非常的有代入感。</p><p>穿越故事的主线总是离不开改变过去，在这一点上，贾玲给出的回答是，因为从没有让母亲高兴快乐过的愧疚，而不管会不会影响到自己出生，都想要改变李焕英的人生轨迹，她极力撮合李焕英与厂长儿子沈光林，而最后李焕英还是和贾文田结了婚，并告诉贾玲，自己并不想要改变人生轨迹，走老路的这一辈子也是很幸福的。</p><p>我们总是以为自己长大了，在某些层面上已经超越了逐渐年老的父母，想着多替他们思考，但到头来，我们替父母思考远不及他们为孩子着想的程度更深。</p><p><strong>“我的女儿，我就让她健康快乐就行”</strong></p><p>在电影中还有一处比较感人，贾玲对着年轻的李焕英说她的孩子，五岁，上的小学，她要是考全班第一，那都属于成绩倒退了…李焕英摇摇头说出了最让人泪目的一句话，我的女儿，我就让她健康快乐就行。</p><p><img src="http://dingyue.ws.126.net/2021/0407/87c30d36g00qr6dwe019hc000hi007tm.gif" alt="我的女儿，我就让她健康快乐就行"></p><p>全天下的父母，哪会对自己的孩子有什么要求，他们辛辛苦苦为的，也全都是自己孩子能够健康快乐，无忧无虑的过一辈子。万千人海里最爱的是自己的孩子。</p><p>据说，《你好，李焕英》这部电影对于父母这一辈人，并没有很深的感触，但他们给出的理由却是更感人的，因为对于辛苦了半辈子的父母而言，电影中所刻画对子女的爱，他们只是认为稀松平常，谁又会被稀松平常而感动呢？</p><p>至此我才明白，原来这部电影一开始就是要给我们看的，父母尚在，也未为人父母，我们在平常的生活中很多时候对父母的爱都会视而不见。我突然明白了电影海报上写的“笑顺父母”并不是简单取的谐音，它就是要提醒我们多为父母考虑，孝顺父母，莫要等到树欲静而风不止。</p><p>而这一题材的电影，应该成功！</p><p>于李荣浩，这份感情是“爸爸妈妈给我的不少不多，足够我在这年代奔波，足够我生活”。于毛不易，这份感情是“月儿明，风儿轻，可是你在敲打我的窗棂”。表达一份真情实感，原本就是最容易引起共鸣的吧！</p><p>若还有机会，勿要错过</p>]]></content>
      
      
      <categories>
          
          <category> 影评 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 你好，李焕英 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python实战(1)</title>
      <link href="2021/01/03/python-shi-zhan-1/"/>
      <url>2021/01/03/python-shi-zhan-1/</url>
      
        <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>跨年夜那天临时起意，想用vs code写一写python，上手练练，用时两天半，完成了一个小工具，真的明白了什么是写bug小能手，就算最终完成的版本，也还是不稳定，想着先记录一下，有时间想起来再改吧</p><blockquote><p>面向百度编程——出自《小张学python语录》</p></blockquote><p>整个过程用到挺多基础模块，但架不住我菜啊，全都是不懂就百度，七拼八凑的把功能实现了，真是了不起，叉会腰</p><img src="https://pic.rmb.bdstatic.com/bjh/f2bff38725dd5a6a5a255e3edf78a715.png" alt="小张厉害坏了" style="zoom:50%;"><h2 id="一、安装模块"><a href="#一、安装模块" class="headerlink" title="一、安装模块"></a>一、安装模块</h2><h3 id="1-1修改python源"><a href="#1-1修改python源" class="headerlink" title="1.1修改python源"></a>1.1修改python源</h3><blockquote><p>pip 是一个现代的，通用的 Python 包管理工具。提供了对 Python 包的查找、下载、安装、卸载的功能。</p></blockquote><p>在使用过程中，python包体积不大，等一会，还可以接受，不过在安装pyqt5时候，要一天的时间，索性还是用国内的源吧</p><p>国内源大概有这些：</p><blockquote><p>​    阿里云 <a href="http://mirrors.aliyun.com/pypi/simple/">http://mirrors.aliyun.com/pypi/simple/</a><br> 中国科技大学 <a href="https://pypi.mirrors.ustc.edu.cn/simple/">https://pypi.mirrors.ustc.edu.cn/simple/</a><br> 豆瓣(douban) <a href="http://pypi.douban.com/simple/">http://pypi.douban.com/simple/</a><br> 清华大学 <a href="https://pypi.tuna.tsinghua.edu.cn/simple/">https://pypi.tuna.tsinghua.edu.cn/simple/</a><br> 中国科学技术大学 <a href="http://pypi.mirrors.ustc.edu.cn/simple/">http://pypi.mirrors.ustc.edu.cn/simple/</a></p></blockquote><p>这里分为两种途径，一种是临时修改，一种是永久修改。很好理解。</p><p>临时：在最后增加-i选项，及python源</p><pre class="line-numbers language-none"><code class="language-none">pip install scrapy -i https://pypi.tuna.tsinghua.edu.cn/simple<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>Linux永久：修改 ~/.pip/pip.conf (没有就创建一个)， 内容如下：</p><pre class="line-numbers language-none"><code class="language-none">[global]index-url = https://pypi.tuna.tsinghua.edu.cn/simple<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>Windows永久：直接在user目录中创建一个pip目录，如：C:\Users\xx\pip，新建文件pip.ini，内容如下</p><pre class="line-numbers language-none"><code class="language-none">[global]index-url = https://pypi.tuna.tsinghua.edu.cn/simple<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><strong>声明：</strong>我只是用了临时，永久修改需要测试，我记录一下，以后有需要可以回来找</p><h3 id="1-2安装python模块"><a href="#1-2安装python模块" class="headerlink" title="1.2安装python模块"></a>1.2安装python模块</h3><p>这里就简单列出来使用了哪些包，python版本用的3.8.3</p><blockquote><p>requests——用来建立会话，post和get</p><p>os——处理文件</p><p>pillow——图片处理（主要用来处理验证码）</p><p>bs4——处理返回的网页数据</p><p>baidu-aip——使用百度智能云的接口进行验证码识别</p><p>pyqt5——python上GUI框架</p><p>pyqt5-tools——pyqt designer设计图形化界面</p><p>pyinstaller——最后生成exe文件</p></blockquote><h2 id="二、实现逻辑"><a href="#二、实现逻辑" class="headerlink" title="二、实现逻辑"></a>二、实现逻辑</h2><p>懒的画框图了，就简单写一下这两天半的时间分别实现了哪些功能</p><p>访问的网页：<a href="https://zfw.xidian.edu.cn/">https://zfw.xidian.edu.cn</a></p><p>对，这是西电的查流量网站，通过F12查看发送接收的数据，可以看到表单里面学号、密码都是明文传输的，这个网站用了有五六年了，不知道***哪里来的自信，一直都没有更新，所以很适合用来python模拟登录练练手</p><p><strong>第一步：构建所需的data表单</strong></p><p>表单主要分为五部分</p><pre class="line-numbers language-none"><code class="language-none">data = { '_csrf':'',#这个不知道是干嘛，但从html里面可以找到，所以推测类似流水号一样的东西 'LoginForm[username]':'',#学号 'LoginForm[password]':'',#密码 'LoginForm[verifyCode]':'',#验证码 'login-button':''#为空值，只是代表了点击过登录按钮}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>第二步：准备百度云的接口</strong></p><p>百度云注册账号，创建一个服务，就可以获取APP_ID, API_KEY, SECRET_KEY三个值</p><pre class="line-numbers language-none"><code class="language-none">APP_ID = '**'API_KEY = '*****'SECRET_KEY = '*************'client = AipOcr(APP_ID, API_KEY, SECRET_KEY)#生成一个实例，后面直接传验证码图片信息<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><strong>第三步：获取csrf口令及验证码</strong></p><p>个人猜测csrf只是一个服务器发来的流水号，类似银行排到的号一样</p><p>可能和验证码的值绑定在一起</p><pre class="line-numbers language-none"><code class="language-none">s = requests.session()  #创建会话res = s.get(url=url,headers=headers)  #打开查流量的网站soup = BeautifulSoup(res.text,"html.parser")  #将返回的信息给BeautifulSoup处理data['_csrf'] = soup.find(attrs ={"name":"csrf-token"}).attrs['content']  #获取csrf的口令i = soup.find('img',attrs ={"id":"loginform-verifycode-image"})     #获取验证码的地址<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>再次感谢百度baba提供的这么强大的api接口，很详细的使用说明并且还免费使用，实在是强！</p><p>使用方法：</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">""" 读取图片（注意要以二进制的形式打开图片） """def get_file_content(filePath):    with open(filePath, 'rb') as fp:        return fp.read()image = get_file_content('example.jpg')""" 调用通用文字识别, 图片参数为本地图片 """client.basicGeneral(image)#这里的client为前面实例化的<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>返回值：</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">{</span><span class="token property">"log_id"</span><span class="token operator">:</span> <span class="token number">2471272194</span><span class="token punctuation">,</span><span class="token property">"words_result_num"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span><span class="token property">"words_result"</span><span class="token operator">:</span>    <span class="token punctuation">[</span>        <span class="token punctuation">{</span><span class="token property">"words"</span><span class="token operator">:</span> <span class="token string">" TSINGTAO"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span><span class="token property">"words"</span><span class="token operator">:</span> <span class="token string">"青島睥酒"</span><span class="token punctuation">}</span>    <span class="token punctuation">]</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>上面放的代码是官方文档里面的，实际返回验证码的时候，只有对验证码识别的一个值，下面是我的代码</p><pre class="line-numbers language-none"><code class="language-none">code = client.basicAccurate(image)#发送图片code1 = code['words_result'][0]['words']#对返回值进行提取<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>因为有时候识别的字符串少于4位，肯定是不正确的，因为懒的再更新一遍验证码，所以干脆把原来的验证码重新提交给百度云再识别一遍。。。</p><p>最后吧code1的值给到data表单里的verifyCode就可以了</p><p><strong>第四步：提交表单，获取网页</strong></p><p>剩下的内容在逻辑实现上就很简单了，只是带着数据，在原来的会话里面post一下</p><p>取返回值给BeautifulSoup处理一下</p><p>放出代码：</p><pre class="line-numbers language-none"><code class="language-none">def getwebip():    resp=s.post(url='https://zfw.xidian.edu.cn/',data=data)    soup1 = BeautifulSoup(resp.content,"html.parser")    for i in soup1.find('td'):        print(i)    return i  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>（其实看得出来，我写的很笨。。我自己都这么觉得）</p><p><strong>第五步：绘制UI</strong></p><p>第一次上手pyqt5，完全不知道怎么操作，我至少需要两个输入栏，一个回显窗口，一个登陆按钮</p><p>对应的放置两个lineEdit，一个textBrowser，两个pushButton</p><p>界面如图</p><p><img src="https://pic.rmb.bdstatic.com/bjh/edce1c1fcdd18b124eb3262b570fa3e9.png" alt="UI界面"></p><p>别的地方基本都没有改动，只是为了实现功能，懒的也是没谁了。。。</p><p><strong>第六步：绑定功能</strong></p><p>复制别人示例代码，进行魔改，简单~（其实是我真的学不进去了，不想看qt5的教程了T0T）</p><pre class="line-numbers language-none"><code class="language-none">import sysfrom PyQt5.QtWidgets import QApplication, QMainWindow, QPushButton,  QPlainTextEdit,QMessageBox#PyQt5中使用的基本控件都在PyQt5.QtWidgets模块中#导入designer工具生成的login模块from Ui_net import Ui_MainWindowimport net_loginclass MyMainForm(QMainWindow, Ui_MainWindow):    def __init__(self, parent=None):        super(MyMainForm, self).__init__(parent)        self.setupUi(self)        #添加登录按钮信号和槽。注意display函数不加小括号()        self.pushButton.clicked.connect(self.display)        #添加退出按钮信号和槽。调用close函数        self.pushButton_2.clicked.connect(self.close)            def display(self):        #利用line Edit控件对象text()函数获取界面输入        net_login.data['LoginForm[username]'] = self.lineEdit.text()        net_login.data['LoginForm[password]'] = self.lineEdit_2.text()        #利用text Browser控件对象setText()函数设置界面显示        net_login.login()        ip = net_login.getwebip()        self.textBrowser.setText("ip查询结果: "+  ip )if __name__ == "__main__":    #固定的，PyQt5程序都需要QApplication对象。sys.argv是命令行参数列表，确保程序可以双击运行    app = QApplication(sys.argv)    #初始化    myWin = MyMainForm()    #将窗口控件显示在屏幕上    myWin.show()    #程序运行，sys.exit方法确保程序完整退出。    sys.exit(app.exec_())<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第七步：生成exe</p><p>其实到第六步已经可以比较完美的实现了我想要的功能，但最终还想尝试一下打包exe</p><p>于是我的第一个exe程序诞生了，虽然伴随着很多bug，稍微有点不开心就卡死</p><p>但功能还是有的，先放成功的截图</p><p><img src="https://pic.rmb.bdstatic.com/bjh/5fd2320be3453813dcbbcd13306ce361.png" alt="成功了！泪目"></p><p>首先安装<code>pip install pyinstaller</code></p><blockquote><p>PyInstaller 其实就是把 python 解析器和你自己的脚本打包成一个可执行的文件，和编译成真正的机器码完全是两回事，所以千万不要指望成打包成一个可执行文件会提高运行效率，相反可能会降低运行效率，好处就是在运行者的机器上不用安装 python 和你的脚本依赖的库。在 Linux 操作系统下，它主要用的 binutil 工具包里面的 ldd 和 objdump 命令。</p></blockquote><p>其次把用到的py文件放一起，在cmd里面打开这个文件夹</p><p>执行<code>pyinstaller -F ***.py</code> </p><blockquote><p>-F 表示生成单个可执行文件<br>-w 表示去掉控制台窗口，这在GUI界面时非常有用。不过如果是命令行程序的话那就把这个选项删除吧！<br>-p 表示你自己自定义需要加载的类路径，一般情况下用不到<br>-i 表示可执行文件的图标</p></blockquote><p>在打包的时候，中途因为路径存在乱码不得已需要加上-p 重新指定路径</p><p>于是正常生成了exe文件</p><p>完结！撒花！</p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> pyqt5 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo建站记录</title>
      <link href="2020/12/27/hexo-jian-zhan-ji-lu/"/>
      <url>2020/12/27/hexo-jian-zhan-ji-lu/</url>
      
        <content type="html"><![CDATA[<h2 id="什么是-Hexo？"><a href="#什么是-Hexo？" class="headerlink" title="什么是 Hexo？"></a>什么是 Hexo？</h2><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 <a href="http://daringfireball.net/projects/markdown/">Markdown</a>（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p><h2 id="使用环境"><a href="#使用环境" class="headerlink" title="使用环境"></a>使用环境</h2><p>由<a href="https://hexo.io/zh-cn/docs/">Hexo</a>的官网可以了解到，本地需要部署<a href="http://nodejs.cn/">Node.js</a>以及<a href="https://www.runoob.com/git/git-install-setup.html">Git</a></p><p>我选择的版本如下：</p><pre class="line-numbers language-none"><code class="language-none">[root@VM-8-8-centos ~]# node -vv10.23.0[root@VM-8-8-centos ~]# hexo -vhexo-cli: 4.2.0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>这里给出官方要求的对应版本</p><table><thead><tr><th align="left">Hexo 版本</th><th align="left">最低兼容 Node.js 版本</th></tr></thead><tbody><tr><td align="left">5.0+</td><td align="left">10.13.0</td></tr><tr><td align="left">4.1 - 4.2</td><td align="left">8.10</td></tr><tr><td align="left">4.0</td><td align="left">8.6</td></tr><tr><td align="left">3.3 - 3.9</td><td align="left">6.9</td></tr><tr><td align="left">3.2 - 3.3</td><td align="left">0.12</td></tr><tr><td align="left">3.0 - 3.1</td><td align="left">0.10 or iojs</td></tr><tr><td align="left">0.0.1 - 2.8</td><td align="left">0.10</td></tr></tbody></table><p>前述准备工作做好以后，安装Hexo</p><pre class="line-numbers language-none"><code class="language-none">npm install -g hexo-cli<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="建站"><a href="#建站" class="headerlink" title="建站"></a>建站</h2><h3 id="（1）创建文件夹"><a href="#（1）创建文件夹" class="headerlink" title="（1）创建文件夹"></a>（1）创建文件夹</h3><p>创建一个新文件夹hexo，并打开hexo文件夹作为工作目录</p><pre class="line-numbers language-none"><code class="language-none">mkdir hexocd /hexo<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="（2）Hexo初始化"><a href="#（2）Hexo初始化" class="headerlink" title="（2）Hexo初始化"></a>（2）Hexo初始化</h3><p>执行初始化命令，并安装必要模块</p><pre class="line-numbers language-none"><code class="language-none">hexo init npm install<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>新建完成后，指定文件夹的目录如下</p><pre class="line-numbers language-none"><code class="language-none">.├── _config.yml————网站的配置信息├── package.json————应用程序的信息。EJS, Stylus 和 Markdown renderer已默认安装├── scaffolds————模版文件夹├── source————存放用户资源的地方|   ├── _drafts|   └── _posts└── themes————主题文件夹<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>对_config.yml文件进行配置可参考<a href="https://hexo.io/zh-cn/docs/configuration">官方手册</a></p><p>值得一提的事config文件会有好多份，这里需要注意一下优先级问题：Hexo 在合并主题配置时，Hexo 配置文件中的 theme_config 的优先级最高，其次是 _config.[theme].yml 文件，最后是位于主题目录下的 _config.yml 文件。</p><h3 id="（3）常用命令"><a href="#（3）常用命令" class="headerlink" title="（3）常用命令"></a>（3）常用命令</h3><pre class="line-numbers language-none"><code class="language-none">hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>生成静态文件。</p><table><thead><tr><th align="left">选项</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><code>-d</code>, <code>--deploy</code></td><td align="left">文件生成后立即部署网站</td></tr><tr><td align="left"><code>-w</code>, <code>--watch</code></td><td align="left">监视文件变动</td></tr><tr><td align="left"><code>-b</code>, <code>--bail</code></td><td align="left">生成过程中如果发生任何未处理的异常则抛出异常</td></tr><tr><td align="left"><code>-f</code>, <code>--force</code></td><td align="left">强制重新生成文件 Hexo 引入了差分机制，如果 <code>public</code> 目录存在，那么 <code>hexo g</code> 只会重新生成改动的文件。 使用该参数的效果接近 <code>hexo clean &amp;&amp; hexo generate</code></td></tr><tr><td align="left"><code>-c</code>, <code>--concurrency</code></td><td align="left">最大同时生成文件的数量，默认无限制</td></tr></tbody></table><hr><pre class="line-numbers language-none"><code class="language-none">hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>启动服务器。默认情况下，访问网址为： <a href="http://localhost:4000/%E3%80%82">http://localhost:4000/。</a></p><table><thead><tr><th align="left">选项</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><code>-p</code>, <code>--port</code></td><td align="left">重设端口</td></tr><tr><td align="left"><code>-s</code>, <code>--static</code></td><td align="left">只使用静态文件</td></tr><tr><td align="left"><code>-l</code>, <code>--log</code></td><td align="left">启动日记记录，使用覆盖记录格式</td></tr></tbody></table><hr><pre class="line-numbers language-none"><code class="language-none">hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>部署网站。</p><table><thead><tr><th align="left">参数</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><code>-g</code>, <code>--generate</code></td><td align="left">部署之前预先生成静态文件</td></tr></tbody></table><hr><pre class="line-numbers language-none"><code class="language-none">hexo clean<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>清除缓存文件 (<code>db.json</code>) 和已生成的静态文件 (<code>public</code>)。</p><p>在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令。</p><h3 id="（4）备份与恢复"><a href="#（4）备份与恢复" class="headerlink" title="（4）备份与恢复"></a>（4）备份与恢复</h3><p>这部分内容参考：<a href="https://pzh0226.top/2020/07/13/Hexo%E5%8D%9A%E5%AE%A2%E5%A4%87%E4%BB%BD%E4%B8%8E%E6%81%A2%E5%A4%8D/">IMZM低吟浅唱</a>的文章</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><p>在仓库里创建新的分支hexo，存放Hexo生成的原始文件，原master分支存放生成的静态网页。备份时上传需备份的文件到hexo分支，恢复时拉取hexo分支到本地。</p><h4 id="博客内文件或文件夹的内容"><a href="#博客内文件或文件夹的内容" class="headerlink" title="博客内文件或文件夹的内容"></a>博客内文件或文件夹的内容</h4><ul><li><code>.deploy_git</code>: 执行<code>hexo g</code>自动生成，不需拷贝</li><li><code>node_modules</code>: 安装包的目录，执行<code>npm install</code>自动生成，不需拷贝</li><li><code>public</code>: 执行<code>hexo g</code>自动生成，不需拷贝</li><li><code>scaffolds</code>: 文章的模板，<strong>需拷贝</strong></li><li><code>source</code>: 包含生成网页需要的源文件和其他资源文件，<strong>需拷贝</strong></li><li><code>themes</code>: 主题，<strong>需拷贝</strong></li><li><code>.gitignore</code>: 在push时忽略的文件，<strong>需拷贝</strong></li><li><code>_config.yml</code>: 站点的配置文件，<strong>需拷贝</strong></li><li><code>db.json</code>: 配置文件，不需拷贝</li><li><code>package.json</code>: 依赖的模块列表，<strong>需拷贝</strong></li><li><code>package-lock.json</code>: 模块安装记录，自动生成，不需拷贝</li></ul><h4 id="具体操作"><a href="#具体操作" class="headerlink" title="具体操作"></a>具体操作</h4><ol><li>在<code>.gitignore</code>里添加不需拷贝的内容，可以添加不需拷贝的主题（例如自带主题）。</li><li>删除主题文件夹下的<code>.git/</code>，否则无法push（或者新增个备份文件夹<code>themesbk/themename</code>存放主题拷贝，然后push）</li><li>在blog根目录执行命令<code>git init</code>初始化本地仓库</li><li>继续执行命令<code>git checkout -b hexo</code>创建hexo分支，分支名称可改</li><li>执行<code>git remote add origin https://github.com/username/username.github.io.git</code>添加远程仓库</li><li>依次执行命令<code>git add .</code> , <code>git commit -m "something"</code> , <code>git push origin hexo</code></li><li>需备份时只需执行第6步的命令</li></ol><h4 id="恢复"><a href="#恢复" class="headerlink" title="恢复"></a>恢复</h4><ol><li>安装git, nodejs</li><li>执行<code>git clone -b hexo https://github.com/username/username.github.io.git blog</code>克隆至blog文件夹（名称可改），clone速度太慢可使用镜像<code>github.com.cnpmjs.org</code>或者给git设置代理</li><li>在blog文件夹内执行<code>npm install</code>安装必要模块（网上部分教程依次执行<code>npm install hexo-cli</code>, <code>npm install</code>, <code>npm install hexo-deployer-git</code>，笔者不清楚是否有必要）</li><li>正常地更新博客然后使用<code>hexo g</code>, <code>hexo s</code>, <code>hexo d</code>就行啦（若deploy提示失败根据提示登录即可）</li></ol>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python学习笔记2_数据类型</title>
      <link href="2020/10/15/python-xue-xi-bi-ji-2-ji-ben-shu-ju-lei-xing/"/>
      <url>2020/10/15/python-xue-xi-bi-ji-2-ji-ben-shu-ju-lei-xing/</url>
      
        <content type="html"><![CDATA[<h4 id="标准数据类型"><a href="#标准数据类型" class="headerlink" title="标准数据类型"></a>标准数据类型</h4><p>Python3 中有六个标准的数据类型：</p><ul><li>Number（数字）</li><li>String（字符串）</li><li>List（列表）</li><li>Tuple（元组）</li><li>Set（集合）</li><li>Dictionary（字典）</li></ul><p>Python3 的六个标准数据类型中：</p><ul><li><strong>不可变数据（3 个）：</strong>Number（数字）、String（字符串）、Tuple（元组）；</li><li><strong>可变数据（3 个）：</strong>List（列表）、Dictionary（字典）、Set（集合）。</li></ul><pre class="line-numbers language-none"><code class="language-none">&gt;&gt;&gt; a = 111&gt;&gt;&gt; isinstance(a, int)True<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><strong>isinstance 和 type 的区别在于：</strong></p><ul><li>type()不会认为子类是一种父类类型。</li><li>isinstance()会认为子类是一种父类类型。</li></ul><h4 id="数值类型实例"><a href="#数值类型实例" class="headerlink" title="数值类型实例"></a>数值类型实例</h4><table><thead><tr><th align="left">int</th><th align="left">float</th><th align="left">complex</th></tr></thead><tbody><tr><td align="left">10</td><td align="left">0.0</td><td align="left">3.14j</td></tr><tr><td align="left">100</td><td align="left">15.20</td><td align="left">45.j</td></tr><tr><td align="left">-786</td><td align="left">-21.9</td><td align="left">9.322e-36j</td></tr><tr><td align="left">080</td><td align="left">32.3e+18</td><td align="left">.876j</td></tr><tr><td align="left">-0490</td><td align="left">-90.</td><td align="left">-.6545+0J</td></tr><tr><td align="left">-0x260</td><td align="left">-32.54e100</td><td align="left">3e+26J</td></tr><tr><td align="left">0x69</td><td align="left">70.2E-12</td><td align="left">4.53e-7j</td></tr></tbody></table><p>Python还支持复数，复数由实数部分和虚数部分构成，可以用a + bj,或者complex(a,b)表示， 复数的实部a和虚部b都是浮点型</p><ul><li>1、Python可以同时为多个变量赋值，如a, b = 1, 2。</li><li>2、一个变量可以通过赋值指向不同类型的对象。</li><li>3、数值的除法包含两个运算符：**/** 返回一个浮点数，**//** 返回一个整数。</li><li>4、在混合计算时，Python会把整型转换成为浮点数。</li></ul><p><strong>与 C 字符串不同的是，Python 字符串不能被改变。向一个索引位置赋值，比如word[0] = ‘m’会导致错误。</strong></p><table><thead><tr><th align="center">函数</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">[int(x <a href="https://www.runoob.com/python3/python-func-int.html">,base])</a></td><td align="center">将x转换为一个整数</td></tr><tr><td align="center"><a href="https://www.runoob.com/python3/python-func-float.html">float(x)</a></td><td align="center">将x转换到一个浮点数</td></tr><tr><td align="center">[complex(real <a href="https://www.runoob.com/python3/python-func-complex.html">,imag])</a></td><td align="center">创建一个复数</td></tr><tr><td align="center"><a href="https://www.runoob.com/python3/python-func-str.html">str(x)</a></td><td align="center">将对象 x 转换为字符串</td></tr><tr><td align="center"><a href="https://www.runoob.com/python3/python-func-repr.html">repr(x)</a></td><td align="center">将对象 x 转换为表达式字符串</td></tr><tr><td align="center"><a href="https://www.runoob.com/python3/python-func-eval.html">eval(str)</a></td><td align="center">用来计算在字符串中的有效Python表达式,并返回一个对象</td></tr><tr><td align="center"><a href="https://www.runoob.com/python3/python3-func-tuple.html">tuple(s)</a></td><td align="center">将序列 s 转换为一个元组</td></tr><tr><td align="center"><a href="https://www.runoob.com/python3/python3-att-list-list.html">list(s)</a></td><td align="center">将序列 s 转换为一个列表</td></tr><tr><td align="center"><a href="https://www.runoob.com/python3/python-func-set.html">set(s)</a></td><td align="center">转换为可变集合</td></tr><tr><td align="center"><a href="https://www.runoob.com/python3/python-func-dict.html">dict(d)</a></td><td align="center">创建一个字典。d 必须是一个 (key, value)元组序列。</td></tr><tr><td align="center"><a href="https://www.runoob.com/python3/python-func-frozenset.html">frozenset(s)</a></td><td align="center">转换为不可变集合</td></tr><tr><td align="center"><a href="https://www.runoob.com/python3/python-func-chr.html">chr(x)</a></td><td align="center">将一个整数转换为一个字符</td></tr><tr><td align="center"><a href="https://www.runoob.com/python3/python-func-ord.html">ord(x)</a></td><td align="center">将一个字符转换为它的整数值</td></tr><tr><td align="center"><a href="https://www.runoob.com/python3/python-func-hex.html">hex(x)</a></td><td align="center">将一个整数转换为一个十六进制字符串</td></tr><tr><td align="center"><a href="https://www.runoob.com/python3/python-func-oct.html">oct(x)</a></td><td align="center">将一个整数转换为一个八进制字符串</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python学习笔记1_基本语法</title>
      <link href="2020/10/12/python-xue-xi-bi-ji-1-ji-ben-yu-fa/"/>
      <url>2020/10/12/python-xue-xi-bi-ji-1-ji-ben-yu-fa/</url>
      
        <content type="html"><![CDATA[<h4 id="编码："><a href="#编码：" class="headerlink" title="编码："></a>编码：</h4><p>默认情况下，Python 3 源码文件以 <strong>UTF-8</strong> 编码，所有字符串都是 unicode 字符串。</p><pre class="line-numbers language-none"><code class="language-none"># -*- coding: cp-1252 -*-<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>定义允许在源文件中使用 Windows-1252 字符集中的字符编码，对应适合语言为保加利亚语、白罗斯语、马其顿语、俄语、塞尔维亚语。</p><h4 id="python保留字"><a href="#python保留字" class="headerlink" title="python保留字"></a>python保留字</h4><p>Python 的标准库提供了一个 keyword 模块，可以输出当前版本的所有关键字：</p><pre class="line-numbers language-none"><code class="language-none">&gt;&gt;&gt; import keyword&gt;&gt;&gt; keyword.kwlist['False', 'None', 'True', 'and', 'as', 'assert', 'break', 'class', 'continue', 'def', 'del', 'elif', 'else', 'except', 'finally', 'for', 'from', 'global', 'if', 'import', 'in', 'is', 'lambda', 'nonlocal', 'not', 'or', 'pass', 'raise', 'return', 'try', 'while', 'with', 'yield']<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h4><p>Python中单行注释以 <strong>#</strong> 开头，实例如下：</p><pre class="line-numbers language-none"><code class="language-none"># 第一个注释<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>多行注释可以用多个 <strong>#</strong> 号，还有 <strong>‘’’</strong> 和 **”””**：</p><pre class="line-numbers language-none"><code class="language-none">#!/usr/bin/python3  # 第一个注释 # 第二个注释  ''' 第三注释 第四注释 '''  """ 第五注释 第六注释 """ print ("Hello, Python!")<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="行与缩进"><a href="#行与缩进" class="headerlink" title="行与缩进"></a>行与缩进</h4><p>python最具特色的就是使用缩进来表示代码块，不需要使用大括号 <strong>{}</strong> 。</p><p>缩进的空格数是可变的，但是同一个代码块的语句必须包含相同的缩进空格数。</p><h4 id="多行语句"><a href="#多行语句" class="headerlink" title="多行语句"></a>多行语句</h4><p>Python 通常是一行写完一条语句，但如果语句很长，我们可以使用反斜杠()来实现多行语句</p><p>在 [], {}, 或 () 中的多行语句，不需要使用反斜杠()</p><h4 id="数字-Number-类型"><a href="#数字-Number-类型" class="headerlink" title="数字(Number)类型"></a>数字(Number)类型</h4><p>python中数字有四种类型：整数、布尔型、浮点数和复数。</p><ul><li><strong>int</strong> (整数), 如 1, 只有一种整数类型 int，表示为长整型，没有 python2 中的 Long。</li><li><strong>bool</strong> (布尔), 如 True。</li><li><strong>float</strong> (浮点数), 如 1.23、3E-2</li><li><strong>complex</strong> (复数), 如 1 + 2j、 1.1 + 2.2j</li></ul><h4 id="字符串-String"><a href="#字符串-String" class="headerlink" title="字符串(String)"></a>字符串(String)</h4><ul><li>python中单引号和双引号使用完全相同。</li><li>使用三引号(‘’’或”””)可以指定一个多行字符串。</li><li>转义符 ‘'</li><li>反斜杠可以用来转义，使用r可以让反斜杠不发生转义。。 如 r”this is a line with \n” 则\n会显示，并不是换行。</li><li>按字面意义级联字符串，如”this “ “is “ “string”会被自动转换为this is string。</li><li>字符串可以用 + 运算符连接在一起，用 * 运算符重复。</li><li>Python 中的字符串有两种索引方式，从左往右以 0 开始，从右往左以 -1 开始。</li><li>Python中的字符串不能改变。</li><li>Python 没有单独的字符类型，一个字符就是长度为 1 的字符串。</li><li>字符串的截取的语法格式如下：<strong>变量[头下标:尾下标:步长]</strong></li></ul><h4 id="等待用户输入"><a href="#等待用户输入" class="headerlink" title="等待用户输入"></a>等待用户输入</h4><p>执行下面的程序在按回车键后就会等待用户输入：</p><pre class="line-numbers language-none"><code class="language-none">input("\n\n按下 enter 键后退出。")<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>以上代码中 ，”\n\n”在结果输出前会输出两个新的空行</p><h4 id="同一行显示多条语句"><a href="#同一行显示多条语句" class="headerlink" title="同一行显示多条语句"></a>同一行显示多条语句</h4><p>语句之间使用分号(;)分割</p><h4 id="多个语句构成代码组"><a href="#多个语句构成代码组" class="headerlink" title="多个语句构成代码组"></a>多个语句构成代码组</h4><p>缩进相同的一组语句构成一个代码块，我们称之代码组。</p><p>像if、while、def和class这样的复合语句，首行以关键字开始，以冒号( : )结束，该行之后的一行或多行代码构成代码组。</p><p>将首行及后面的代码组称为一个子句(clause)。</p><pre class="line-numbers language-none"><code class="language-none">if expression :    suiteelif expression :    suite else :    suite<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="Print-输出"><a href="#Print-输出" class="headerlink" title="Print 输出"></a>Print 输出</h4><p>print 默认输出是换行的，如果要实现不换行需要在变量末尾加上 <strong>end=””</strong></p><pre class="line-numbers language-none"><code class="language-none">#!/usr/bin/python3  x="a" y="b" # 换行输出 print( x ) print( y )  print('---------') # 不换行输出 print( x, end=" " ) print( y, end=" " ) print()<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>执行结果为</p><pre class="line-numbers language-none"><code class="language-none">ab---------a b<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="import-与-from…import"><a href="#import-与-from…import" class="headerlink" title="import 与 from…import"></a>import 与 from…import</h4><p>在 python 用 <strong>import</strong> 或者 <strong>from…import</strong> 来导入相应的模块。</p><p>将整个模块(somemodule)导入，格式为： <strong>import somemodule</strong></p><p>从某个模块中导入某个函数,格式为： <strong>from somemodule import somefunction</strong></p><p>从某个模块中导入多个函数,格式为： <strong>from somemodule import firstfunc, secondfunc, thirdfunc</strong></p><p>将某个模块中的全部函数导入，格式为： <strong>from somemodule import *</strong></p><pre class="line-numbers language-none"><code class="language-none">from sys import argv,path  #  导入特定的成员  print('================python from import===================================') print('path:',path) # 因为已经导入path成员，所以此处引用时不需要加sys.path<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">import sys print('================Python import mode==========================') print ('命令行参数为:') for i in sys.argv:print (i) print ('\n python 路径为',sys.path)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>参考《<a href="https://www.runoob.com/python3/python3-basic-syntax.html">Python3 基础语法</a>》</p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Debian部署Samba共享文件</title>
      <link href="2020/10/11/debian-bu-shu-samba-gong-xiang-wen-jian/"/>
      <url>2020/10/11/debian-bu-shu-samba-gong-xiang-wen-jian/</url>
      
        <content type="html"><![CDATA[<p>​        Samba是在Linux和UNIX系统上实现SMB协议的一个免费软件，由服务器及客户端程序构成。Linux下的Samba服务主要用于Windows平台和linux平台下载局域网内实现文件共享。只包含一个配置文件，方便部署。</p><p><strong>一、安装samba</strong></p><p>​        在root权限下执行<code>apt-get install samba</code></p><p><strong>二、创建共享目录</strong></p><pre class="line-numbers language-none"><code class="language-none">mkdir /usr/download                  //创建要共享的目录chmod 777 /usr/download              //修改权限<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><strong>三、 配置文件</strong></p><p>​         配置文件在/etc/samba/smb.conf</p><p>​        有三个特殊块[global]、[homes]、[printers]具体有以下内容:</p><pre class="line-numbers language-none"><code class="language-none">[global]:此块中的参数作用于整个server，或作为其他块中没有定义的一些参数的默认值。参见参数PARAMETERS以获取更多信息。[homes]:如果配置文件中有[homes]块，则会把此用户的home路径共享到此处，既可以访问当前samba用户对应的home文件夹。[printer]:这个用于共享打印服务，很少用到。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><strong>注意：每次修改了配置文件之后先运行<code>testparm</code>来检测语法</strong></p><p>​           <strong>修改完后执行 <code>service smdb restart</code> 或 <code>systemctl restart smbd.service</code>重启服务使其生效</strong></p><pre class="line-numbers language-none"><code class="language-none">======================= Global Settings =======================[global]   workgroup = WORKGROUP   log file = /var/log/samba/log.%m   max log size = 1000   logging = file   panic action = /usr/share/samba/panic-action %d   server role = standalone server   obey pam restrictions = yes   unix password sync = yes   passwd program = /usr/bin/passwd %u   passwd chat = *Enter\snew\s*\spassword:* %n\n *Retype\snew\s*\spassword:* %n\n *password\supdated\ssuccessfully* .   pam password change = yes   map to guest = bad user   usershare allow guests = yes======================= Share Definitions =======================[homes]   comment = Home Directories   browseable = no   read only = yes   create mask = 0700   directory mask = 0700   valid users = %S[anonymous]   path = /usr/download    force group = users   create mask = 0660   directory mask = 0771   browsable =yes   writable = yes   guest ok = yes<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><p><strong>解析：</strong></p><pre class="line-numbers language-none"><code class="language-none">[global]config file = /etc/samba/smb.conf.%U          #可以让你使用另一个配置文件来覆盖缺省的配置文件。如                                                 果文件 不存在，则该项无效。workgroup = WORKGROUP               　　       #工作组名称server string = Samba Server Version %v  　 　 #主机的简易说明netbios name = MYSERVER                   #主机的netBIOS名称，如果不填写则默认服务器DNS的一部                                               分，workgroup和netbios name名字不要设置成一样interfaces = lo eth0 192.168.12.2/24 192.168.13.2/24     #设置samba服务器监听网卡，可以写网卡名                                                          称或IP地址，默认注释hosts allow = 127. 192.168.12. 192.168.13.               #设置允许连接到samba服务器的客户端，默                                                          认注释hosts deny =192.168.12.0/255.255.255.0       #设置不允许连接到samba服务器的客户端，默认注释log level =1                                 #日志文件安全级别，0~10级别，默认0log file = /var/log/samba/%m  　　　　　  #产生日志文件的命名，默认以访问者IP地址命名max log size = 50   　　　　　　　#日志文件最大容量50，默认50，单位为KB，0表示不限制security = share   　　　　　　　　　　　　　　　#设置用户访问samba服务器的验证方式 ，一共四种验证方式。1. share：用户访问Samba Server不需要提供用户名和口令, 安全性能较低。2. user：Samba Server共享目录只能被授权的用户访问,由Samba Server负责检查账号和密码的正确性。账号和密码要在本Samba Server中建立。3. server：依靠其他Windows NT/2000或Samba Server来验证用户的账号和密码,是一种代理验证。此种安全模式下,系统管理员可以把所有的Windows用户和口令集中到一个NT系统上,使用Windows NT进行Samba认证, 远程服务器可以自动认证全部用户和口令,如果认证失败,Samba将使用用户级安全模式作为替代的方式。4. domain：域安全级别,使用主域控制器(PDC)来完成认证。passdb backend = tdbsam   　　　　　　　　　　　　#定义用户后台类型1、smbpasswd:使用SMB服务的smbpasswd命令给系统用户设置SMB密码2、tdbsam:创建数据库文件并使用pdbedit建立SMB独立用户，smbpasswd –a username建立samba用户并设置密码，不过建立samba用户必须先建立系统用户使用以下命令添加新用户    useradd tom -m -G users再使用    smbpasswd -a tom3、ldapsam:基于LDAP服务进行账户验证username map = /etc/samba/smbusers   #配合/etc/samba/smbusers文件设置虚拟用户<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><pre class="line-numbers language-none"><code class="language-none">[share]         　　　　　　　　　　　　　　　　　　　　　#自定义共享名称comment =  This is share software       　　　　　　 #共享描述path  =  /home/testfile                            #共享目录路径browseable  =  yes/no                      　　　　　#设置共享是否可浏览，如果no就表示隐藏，需要通过IP+共享名称进行访问writable  =  yes/no  　　　　　　　　　　　　　　　　　　#设置共享是否具有可写权限read only  =  yes/no  　　　　　　　　　　　　　　　　　#设置共享是否具有只读权限admin users  =  root 　　　　　　　　　　　　　　　　　　#设置共享的管理员，如果security =share 时，引项无效，多用户中间使用逗号隔开，例如admin users = root,user1,user2valid users  =  username  　　　　　　　　　　　　　　　#设置允许访问共享的用户，例如valid users = user1,user2,@group1,@group2（多用户或组使用逗号隔开，@group表示group用户组）invalid users  =  username     　　　　　　　　　　　　#设置不允许访问共享的用户write list  =  username   　　　　　　　　　　　　　　　#设置在共享具有写入权限的用户，例如例如write list  = user1,user2,@group1,@group2（多用户或组使用逗号隔开，@group表示group用户组）public  =  yes/no   　　　　　　　　　　　　　　　　　　　#设置共享是否允许guest账户访问guest  ok  =  yes/no  　　　　　　　　　　　　　　　　　　#功能同public 一样create mask = 0700                  　　　　　　　　　#创建的文件权限为700directory mode = 0700               　　　　　　　　　#创建的文件目录为 700<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>参考文章：《<a href="https://www.cnblogs.com/zoulongbin/p/7216246.html">samba服务配置（一）</a>》</p><p>​                   《<a href="https://www.howtoing.com/debian-samba-server">在Debian 8上安装Samba服务器</a>》</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Debian </tag>
            
            <tag> Samba </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《七个世界，一个地球》影评</title>
      <link href="2019/11/18/qi-ge-shi-jie-yi-ge-di-qiu-ying-ping/"/>
      <url>2019/11/18/qi-ge-shi-jie-yi-ge-di-qiu-ying-ping/</url>
      
        <content type="html"><![CDATA[<p>敬畏生命，好像从很早之前就已听说，在我们开始蹒跚学步的时候，在战争年代，在石器时期，这个话题早已成为永恒，然而，就是这古老的话题，放之于繁杂的现代，我们也不可谓无用。科技进步，人类生活日新月异，越是这样耳熟能详的句子，仿佛是在给我们注射麻醉剂，催促着我们要不断地工作，买房买车，好像只有这样才是赶得上时代的潮流，但，你可曾记得，我们的祖先，为了生存去寻找宝贵的火种，用血与汗水铸就的一件又一件的青铜器，岁月辗转，我们好像逐渐忘却了生命存在的意义。</p><p>《七个世界，一个地球》这是英国BBC广播公司历时4年打磨出的一部记录片，且不说前后有超过1500人参与拍摄制作，仅是片名中所说的七个世界，便是指地球上七大洲，拍摄内容也正是七大洲上各种动物的栖息地，还有人类的生活足迹给这些动物们带来的影响，我们可以真真切切的感受到这些动物们为了生存所作出的努力，以及它们独有的智慧，制作团队将这众多内容浓缩成七集纪录片，其心血可见一斑。</p><p>生命，于我，是一颗跳动的心脏，万千物种皆是，在数百万年前，地球上还没有人类的概念，万千生命共同遵守着丛林法则，弱肉强食的世界里，没有固定的霸主，相比于原始时期凶猛的大型动物，原始人类甚至可以说是渺小，没有坚硬的爪子，没有锋利的牙齿，甚至冬天没有保暖的皮毛，然而原始人类知道通过团结在一起，形成巨大的力量，来保证自己能够生存下去，这就是最为原始的生命的智慧。关于人类文明的起源，有人说，是从有了自己的文字开始，有了文字，智慧的种子开始生根发芽，文明有了最初的模样，并且得到了传承，进而建立起了合理的社会规则，人类这个词语也便诞生了，这一切，不似巧合，冥冥中有一股巨大的力量在推着我们前行，难道不感叹生命的伟大吗？</p><p>记录于书本之上的文字，往往不如影视来的震撼，曾经读过《娱乐至死》，作者所担忧的是，电子和图像革命所产生的后果，是我们对于真理、知识的定义，在不自觉中以这样一种新媒介展示出来，而我们欠缺独立思考地接受了。然而，社会的发展是不可阻挡的，在这样信息变得碎片化的时代，我们不断刷着手机，安慰着自己不脱离时代，但每天躺在床上的时候又会哀叹，今天好像很充实，但又很空虚。</p><p>那么，现在，你是不是该尝试让自己静下心来，追溯本源，回归到生命本来的样子，去体味自然界中的生灵气息。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>《烈火英雄》影评</title>
      <link href="2019/11/11/lie-huo-ying-xiong-ying-ping/"/>
      <url>2019/11/11/lie-huo-ying-xiong-ying-ping/</url>
      
        <content type="html"><![CDATA[<p><img src="https://p.pstatp.com/origin/137de000266b3a3d0a0cc" alt="烈火英雄"></p><p>这是一部给不了高分，但剧情中不缺乏泪点的电影</p><p>整体来看，《中国机长》是与这部电影题材较为类似的，都是在为群众揭示一个背后付出很多，但其辛苦又鲜为人知的行业，观影之后，我不认为《烈火英雄》是能够超越前者的存在，从剧情发展来说，二者无异，能较好的渲染那种危机氛围，引得观众眉头紧锁，生怕下一秒发生意外，但从叙事，拍摄手法来看，《烈火英雄》显得俗气一些，甚至有地方较为老套</p><p>演员阵容比较吸引我，黄晓明，杜江，谭卓，杨紫，欧豪，侯勇，可以看出演员阵容很强，从老戏骨到小花旦，以及教主带来些许流量，这部电影至少从阵容上来说，是朝着大作准备的</p><p>黄晓明，对于他来说，早已摆脱了没有演技的标签，电影中，面对孩子的质疑，面对火灾，不畏生死的嘶吼，从他的面部表情、那种坚定的眼神，能透过荧幕传达给观众，电影中，他决定让同伴先走，自己一个留下关掉阀门，在熊熊烈火中，看着他的身影，切实称为英雄，但是江立伟这个人物塑造，总觉得不够丰满，想来想去，可能是教主在电影中，一些语气，肢体动作，还显得僵硬，给我的感觉像是一直拘着自己，也可以说还有一丝的装酷、耍帅，但实际上教主已经过了小鲜肉的年纪，该思考着怎么深入角色内心，什么时候，再看到黄晓明饰演的角色，没有了黄晓明的味道，更多的是角色的特征，就可以称得上是老戏骨了</p><p><img src="https://upload-images.jianshu.io/upload_images/17176430-fc9d98bb46be60ce.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img"></p><p>我很喜欢侯勇这位老演员，戏骨、敬业可以说是他的代名词，在《人民的名义》里面，虽然总体出镜不多，但饰演的角色张弛有度，神情到位，可以看出来作为实力派演员，拥有扎实的功底，可能也是受益于军人出身，在《烈火英雄》中饰演救火的总指挥，侯勇的表演很是得心应手，每一句台词，对于感情的拿捏，让观众看着分外舒服</p><p>杨紫和欧豪，既可以说是这部电影主线上两个关键的消防人员，也可以说是电影想展现的一个理念之一，消防人员，他们也是有血有肉的人，他们甚至还是未来充满希望的青年，但是危险到来时，组织就重于一切；这两位也算得上是年轻一派中优秀演员，欧豪饰演的角色，负责清理远程供水区域的垃圾，在前线断水的时候，欧豪自信满满向指挥部报告，远程供水不会出现问题，显得有些脱离实际，多了几分张挺，在这个镜头上，我认为只是语气坚定就可以传达出那种情感，不需过意昂头挺胸；电影对杨紫饰演角色的刻画篇幅并不多，拍完婚纱照，急匆匆赶去火场一线，在车上，年轻两口的拌嘴，杨紫饰演的角色，没有展现出性格深处的东西，一个角色，要塑造到位，是要有思想的，杨紫在这部电影里，止步于性格，思想欠缺，对于电影主题来说是够的，对于杨紫这个演员来说，存在进步空间</p><p>接下来，我想通过电影中的细节展示来评述</p><p><img src="https://upload-images.jianshu.io/upload_images/17176430-dcf881eb586b20c2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img"></p><p>首先提及的是江立伟被撤销中队长之后，妻子对他说，你有多久没陪一陪孩子了；江立伟陪着孩子一同参加运动会，江淼骄傲地向同学炫耀自己的爸爸，同学却说，你爸爸害死过人。随后，两个孩子掐打起来，江立伟和那同学的父亲也打起来，被拉开后，江淼哭着问爸爸，你到底有没有害死过人，江立伟沉默、跪在地上</p><p>我们都知道消防员是救人，但消防员也是人，尤其，他们的队长，在肩负着灭火的责任之外，还要负责整个消防队的安危，身为队长，他也有自己的家庭，跪在地上的那一刻，仿佛是看到了被这样多重压力所压垮的江立伟，又仿佛是因为自己的工作，而对家人产生的致歉；如果说是江立伟面对着多重压力，那想展示的是一个有血有肉的消防人的不易，如果是后者，算是为电影最后江立伟选择牺牲埋下伏笔，他是多么想陪着家人，给家人带来欢乐，但工作却不允许这样</p><p>之所以写成两部分的解读，的确是导演在这部分，没有做到统筹兼顾，两者是带有些许的矛盾，但就正如一千个人心中有一千个哈姆雷特，这样的镜头无可非议，只是看观众自己怎么理解了，我去查阅了电影文字版介绍，剧情想描写的是一个被压垮的江立伟，包括在后面遇到危险，他想着赶紧让自己的战友跑，电影想细化从被压垮到重新审视局势的江立伟，从拍摄的最终效果来看，展现方式并不完美</p><p><img src="https://upload-images.jianshu.io/upload_images/17176430-521bef007388e350.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img"></p><p>还有一个场景，是很让我感动的，火灾发生后，命令一个中队死守化学罐区，前线断水，流淌火已经烧到眼前，化学罐罐体不断升温，消防中队的每一个队员站在罐体旁边，肩并肩组成最后一道人墙，仅是坐在影院观看电影，就能体会到当时那种绝望与压迫，队员们无畏生死与大火搏斗到最后一刻，让人肃然起敬</p><p>关于电影最后在徐小斌的牺牲部分，徐小斌是欧豪饰演的角色，前面说欧豪个人表演，张力有余，情感不足，这是演员的特点，电影在处理他牺牲的部分，显得很仓促，为了在水下清理垃圾，保证远程供水，不慎被缠住，导致最后牺牲，首先，这是比较跳跃的一段，因为消防员处理远程供水，其专业技能，专业设备在电影中都没提及，反而给人的感觉就是普通人在处理这件事，其次，在战友明显遇到危险，船上的人没有去水中施救，一味地拽着绳子，使得徐小斌在水下自救不成，实在是很突兀</p><p>在徐小斌和江立伟牺牲前的镜头，我第一次见这种手法是电影《太平轮》中，巧合的是，太平轮中也有黄晓明参演，在角色牺牲前，产生穿越的画面，回到家人身边，似梦非梦的唯美，不一样的是，《太平轮》整个电影的画面都是很美的，而《烈火英雄》是要表述奋不顾身的英勇豪迈，最后牺牲的时候，重复采用穿越画面，更多的表现出一种刻意渲染，有些生硬</p><p>观影后，走在街上，看着来来往往的行人，忙碌于自己的事情，想起电影里的一句话“我们的节日，就是消防员的工作日”，11月9日是消防员日，希望至少在这样的节日里，我们能发自内心的感激他们，我们不希望看到发生灾难，但在灾难面前，英勇前行的身影，只有他们</p>]]></content>
      
      
      <categories>
          
          <category> 影评 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 影评 </tag>
            
            <tag> 烈火英雄 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《少年的你》影评</title>
      <link href="2019/10/29/shao-nian-de-ni-ying-ping/"/>
      <url>2019/10/29/shao-nian-de-ni-ying-ping/</url>
      
        <content type="html"><![CDATA[<p><img src="https://upload-images.jianshu.io/upload_images/17176430-3cb0944d883371bf.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1080/format/webp" alt="img"></p><p>这部电影可以说是近期最火的了，原本以为自从看完《中国机长》，会一直等到《叶问4》上映，才刚过了不到一个月吧，网上对《少年的你》这部电影好评不断，看到是由周冬雨、易烊千玺主演，我第一感觉是这电影，可能又会是懵懂啊、青春之类的，虽然说这种风格比较固定，但我还是有些偏好周冬雨的电影，当然，也不是说她的电影就要吹上天，可以说下限与上限都是我个人接受的范围内</p><p>周一，是一周开工的第一天，偷偷溜出去，选了个上好的观影位置，吃过晚饭，便慢悠悠地前往电影院</p><p>电影开始，展现了一所高中跑操、早读的学生们，像极了高三时候的我们，这部电影也是以高三学生为基础故事背景来展开的，这两个镜头可以说是非常有代入感，可能尤其是对于衡水出去的学生来说吧，我的思绪正沉浸在高三的回忆中，同行的小伙伴低声吐槽了一句“他们这跑操比衡水可差远了”，说句题外话，同为衡水走出去的，我是较低的档次，人家正经是衡水中学毕业，心生敬佩</p><p>一句话把我的注意力拉了回来，电影里的故事继续展开，女主，周冬雨扮演的陈念，家庭贫困，和母亲相依为命，为了躲债、躲房东，陈念母亲出门在外，靠卖一些“三无”面膜，维持生计，供陈念读书，陈念这边，也很努力，成绩不错，也很体恤母亲的辛苦</p><p>高三的生活，实属紧张，在陈念的心里，高三的学生就该一头扎进题海里，好好学习，凡是与学习无关的，也都是次要的，交朋友也是</p><p>在一个课间，陈念拿出手机，熟练的带起耳机练习听力，耳边全是标准的英文，同学的打闹丝毫不会影响到陈念，事情总是发生在一瞬间，教室里的人全都急忙跑出去，好像是有什么热闹，陈念也被这突然变化的氛围吸引到了，走出去看，眼前的事情让她急忙跑下楼梯，她惊呆了，胡小蝶，就在早上还一起搬全班的牛奶的那个女同学，自杀了</p><p>事情发生的整个过程，从练习英语听力到紧张、震惊，周冬雨把所有的情绪拿捏的相当到位，镜头的衔接吸引力十足，也可见导演的功底深厚</p><p>易烊千玺，可以说这部电影给我最深印象的演员，我没看过《长安十二时辰》，之前对他的感觉，也就只停留在那个“左右手，慢动作”的小孩子，一晃突然长这么大了，时间好快，然而，易烊千玺所出演的刘北山（小北），并没有给人一种小鲜肉，靠脸吃饭的感觉</p><p>小北的出场是陈念回家的路上，刚好路过一群人在打小北，电影里也没有提起太多原因，只是说小北欺负了别人，陈念是一个心底很善良的女孩子，她想偷偷的报警，但被那群打架的人听到了，具体细节不多描述，只是那群人走后，小北，颤颤巍巍地从地上爬起来，走路都走不稳的那种状态，看的人很揪心</p><p>关于易烊千玺的演技在别的镜头里，也是很多值得称赞的地方，比如陈念在小北家里写作业的时候，小北看到陈念书上写着一句“生活在阴沟,也要记得仰望星空”，他目光有些呆滞着，感叹陈念还很干净；还有后来小北挨打，跟陈念一起躺在床上，小北侧躺着，一边流泪，一边说，陈念，你是第一个会问我疼不疼的人，可能就是从这个时刻开始，小北下定了决心要保护她吧</p><p>这部电影是讲述的校园欺凌、校园暴力，这种题材的电影，反应现实问题，所以，在看完电影之后，只是很引人深思，对于剧情的回味倒是不多，从这个角度来讲，这部电影也称得上成功</p><p>以下部分可能涉及剧透，关于剧情的部分</p><p>个人感觉，从陈念救下小北，小北为了还人情，两个人互相认识，之后陈念走投无路，跑去找了小北，以及在后续中小北跟在陈念身后保护她，去警告那些欺负陈念的同学，大部分剧情安排都很合理，包括小北从一个小混混的心态，到最后说出“你先走，你先去安全的地方”，整个的心路历程，在电影中都有展现</p><p>剧情中有比较感动的部分是陈念和小北两个人分开审讯，为了两个人的约定，在警察想各种办法劝说的情况下，仍然坚持自己的初衷</p><p>“有谁会替别人背负强奸罪和杀人罪” “你我都不会，可他们是少年”。可少年的爱是单纯的，执着的；少年的爱就是奋不顾身的保护；小北和陈念一起撒谎不松口的段足以证明他们是真正的少年，他们具备着成人没有的勇气，看到这里时，既为他们俩感到心疼，又觉得他们俩真的很幼稚，这种矛盾的心理，我想也应该是导演想要传达出来的吧</p><p>要说起电影哪部分比较勉强，我觉得当属陈念反思到错误，去公安局把事实全部倾诉了出来，可能是电影前面记叙故事发展比较细节，最终受限于电影时长，对于这部分内容展现的过于仓促，也不能说这就是电影的败笔，整体来说，瑕不掩瑜</p><p>最后的镜头，又回到了电影刚开始的画面，陈念作为一名老师，在教孩子们读英语句子“There used to be our playground”，与刚开始不一样的是，陈念注意到了班级里有个女生，似乎很有心事，就和自己当年一样，放学后，陈念陪着同学一起回家，小北还是跟在身后，画面挺让人感动，他们也实现了当初的诺言</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>《你好，之华》影评</title>
      <link href="2019/10/28/ni-hao-zhi-hua-ying-ping/"/>
      <url>2019/10/28/ni-hao-zhi-hua-ying-ping/</url>
      
        <content type="html"><![CDATA[<p>首先，从剧情展开来讲，影片一开始在殡仪馆，以袁之南的葬礼开始，灰暗的画面，配以大提琴低沉地伴奏，给人的感觉相当压抑，也是对剧情基调的铺垫吧，只是从观众的角度来说，倘若不是专注去看，或者不是在电影院贡献票房去看的，可能前面这部分葬礼会让人很容易忽略掉，我也是在看了大概有三遍，注意到了前面对人物性格、情感的一些刻画，就比如，飒然提出想要在姥姥家住上些日子，而晨晨立马说，要住到小姨家，这样简单的对话，小演员可以说把细节掌握的相当到位，晨晨顾着玩手机，说话的时候都没有抬起头去看别人，只是最后补充，觉得飒然事多，麻烦；也像极了我们小时候跟同龄人之间的拌嘴，互相嫌弃</p><p>在姥姥家，袁之华准备离开的时候，出现了故事的第一个线索——初中同学聚会的邀请，这里我没有记得太清楚，好像是三十年的样子，随后镜头给到了尹川的家里，乱糟糟的，还有尹川的妹妹，好像这个人给观众的感觉一直都是有些憨厚，肥胖的体型，一边帮尹川整理衣服，一边说着准备带孩子在迪士尼玩一天再回去，言语之中，看得出生活也并不富裕，临走的时候，拿出了初中聚会的宴请信</p><p>剧情衔接比较紧凑，聚会那天，袁之华和尹川见了面，像是命中注定，尹川很主动的找向袁之华，但是聚会来得所有人好像都没有认出这个人是袁之华，而不是袁之南，包括尹川</p><p>回家之后，周文涛（之华丈夫）很巧合的在手机上看到了之华手机上尹川发来的消息，“三十年来，我一直喜欢着你”，进而很顺利的引起了一场家庭矛盾，之华的手机直接被摔坏了</p><p>尹川是之华初中时期暗恋的男生，而这个男生喜欢的人却是之华的姐姐，袁之南；青春时期的感情大概都是这样，总是会有些阴差阳错，不得圆满</p><p>可能还是出于小时候那种情愫，之华开始主动给尹川写信，但，她用的是袁之南的身份来跟尹川交流，当然，这部电影没有那么不良的三观，之华只是用以抱怨生活中的糟心事，并且没有写寄信地址，只是单方面寄信过去</p><p>不得不提起另外一部电影《不二情书》，好像也是以这种写信的方式来展开，然而，还是有很大的不同，《你好，之华》这部电影中也包含了一些其他情感线、故事线，给电影增加一些活泼、生动，还有一些值得思考的内容</p><p>在记叙现实生活中的信件之外，还穿插了对初中时代的一些回忆，年少的之华，手里拿着自己喜欢的男生对自己姐姐的表白信，她选择了隐瞒，这种行为虽然不合适，但很符合初中那个年龄段孩子的心理活动，为了能见上尹川一面，打着看尹川妹妹的名义，然而在隐瞒的事情败露后，之华清楚的意识到了自己的错误，把情书给了之南，也就有了后来，之南和尹川的发展</p><p>到这里，好像之华都是苦情戏，所以剧情里也安排了一些支线，就是之华的婆婆，与她年轻时的英语老师之间的一场夕阳恋，之华的婆婆，七八十岁的年纪，为了能和扈老师有共同话题，带着眼镜，照着字典，一点一点学着英语，说是夕阳恋，但更多地觉得很可爱</p><p>在与尹川的后续沟通中，之华借用了扈老师家的地址，尹川自然从上海找了过来，之华说清楚了之南去世的事情，让尹川很震惊，这里才告诉观众，尹川和之南在大学期间是在一起了一段时间，然而却被一个叫做张超的插了一脚，而最后和之南结婚的也是张超，有趣的是，胡歌扮演的张超，也太帅了吧，也难怪之南喜欢</p><p>婚后，张超并没有成为一个合格的丈夫，合格的父亲，甚至抛下了整个家庭，和一个很简单的女人住在一起，也正是之南独自在承担这个家庭，导致了她逐渐抑郁、自杀</p><p>剧情展开到这里，主线上所有的问题都变得清晰，但我对电影的思考，也是自此开始</p><p>一个少女暗恋一个少年</p><p>而这个少年去喜欢她的姐姐</p><p>长大后，少年仍坚持着心里的念想</p><p>回来出发的地方，却物是人非</p><p>一个老太太</p><p>已至暮年，仍不放弃自己的追求</p><p>努力去学英语</p><p>然而扈老师却只觉得太任性</p><p>电影快要结束的时候，飒然对睦睦说，自己也暗恋着班里的一个男生，甚至想起来都会脸红的那种，但是自己想明白了，喜欢就要勇敢地面对，连自己都想着逃避，才是最没用的</p><p>最深切的感受：如果说，人生中的阴差阳错是不可避免的，那源自内心的主动就是可控的，爱，就该去争取，不顾一切的去争取！</p><p><img src="https://upload-images.jianshu.io/upload_images/17176430-a4d5eaad836770a3.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1080/format/webp" alt="img"></p>]]></content>
      
      
      <categories>
          
          <category> 影评 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 影评 </tag>
            
            <tag> 你好，之华 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《以幽默的方式过一生》书评</title>
      <link href="2019/10/27/yi-you-mo-de-fang-shi-guo-yi-sheng-shu-ping/"/>
      <url>2019/10/27/yi-you-mo-de-fang-shi-guo-yi-sheng-shu-ping/</url>
      
        <content type="html"><![CDATA[<p>作为一个非常不喜欢看书的人，每当看到别人说道自己看的书范围之广，心里觉得很惭愧，小时候家里给我买了一个很大的书柜，大到可以整个人钻进去，然而，也并没有养成读书的习惯，书柜，自从上了高中，也就不再放我的东西了</p><p>我也尝试过，看一些小说，尽量让自己投入到书中的故事发展，然而事实证明，我的这个想法是很失败的，故事发展到一半，我就觉得无聊，人物还是那么几个，对话又过分老套，实在是看不下去</p><pre class="line-numbers language-none"><code class="language-none">其实不读书也没什么坏处，只是太过沉溺于现实世界，容易狗苟蝇营，比如，你可以通过读一本传记，窥见别人的人生。你可以读一本心理学的书，洞悉自我的处境。你可以读一本历史的书，看刀光剑影，明白再辉煌的生命也会尘埃落定。读书，让你在历史、未来、现实、空虚中来回穿梭，然后发现自己生活的更多可能<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>上面这段话是借用书里面的，以我目前的功力，很难写出这么清晰的文字，但读懂这样一段话并不难，读书，不是为了炫耀什么，是提升自己对这个世界的认识，站在别人的角度去观察，纵向去扩展生命的层次，是真的有意思</p><p>一直以来，我脑子里认为的，是我自己不适合读书，但就是很突然的想法，我找学长说，我想抽出时间，来看书，一来是我真觉得自己这方面思想匮乏，二来是我自己近期的确不忙，说是抽出时间，更适合的应该是打发时间</p><p>可以说是机缘巧合，在书单里面众多的名字，我一眼就看中了这本书，可能也是我天生具有幽默属性吧，“以幽默的方式过一生”与其说是一本书，我更喜欢把它当做是一种人生态度，也不管是出于什么了，在看中这本书之后，我直接开始看了起来</p><p>书的前面自然是一篇比较正经的序，来自作者的朋友，序里提到，作者这个人，是一个很细心生活的人，作者名为琢磨先生，就是因为对身边的小事都会琢磨好久，从历史到哲学，生活的方方面面，这本书也正是这样的风格，写的每件事都比较简单，但是从简单的事情里面，讲述了一些我们经常会忽略的道理</p><p>除了书中的内容，我自觉给我最大的体会就是，这本书，改变了我以前的一些看法，我并不是一个不适合看书的人，而且一直以来，我没有找到我喜欢的书；也用我的经验劝告所有的人，如果你觉得自己在某个方面很不适应，问题可能并不是出在你自己的身上，而是你没有找到真正适合你的那个机会，可能是某个地点、某个时间、某个巧合</p><p>回到书中，这本书讲述的道理很复杂，是包含着一个人从记事开始到四五十岁的年纪所有的经历，这位琢磨先生，还真是不负他的名号，小到开车、机场偶遇，大到婚姻、爱情观，能够看出作者的视角，是确确实实把这些琐事揉碎了，提炼出自己的人生道理，我有一种很深刻的感觉，作者的一生过得挺舒适，当然，这不是说他家庭富裕、朋友众多、无忧无虑，作者也会有自己的烦恼，但是这种东西，能解决的，那还叫什么烦恼，不能解决的，也不必去烦恼了</p><p>这种想的开，看得透的人生，我着实羡慕，因为人是一种很容易看透别人，但到头来，自己明白一堆大道理，落实到自己身上，却难做到，甚至都想不明白；这种爱琢磨的习惯，不能说不是一个好习惯</p><p>难能可贵去琢磨</p><p>上面这句话，是我说的，这本书里面，提及乐观积极去生活倒是很少，但这种生活中保持幽默、乐观的态度，在整本书里无处不在，作者说，从开始写作，到最后出版，历时五年，也实属心血之作了</p><p>要是说我那些地方被这本书影响到了，实在是太多，多到我自己可能都记不过来，就只说我现在写的这篇内容，完完全全是因为这本书里告诉我的，想去做，那就要立马去做，不要犹犹豫豫，有任何迟疑，万千事物，你可以有许多想法，但重要的，要开始做！</p><p>合上这本书，回归自己的生活，我缺少的不止是作者这种爱琢磨的精神，以及发现生活细节的眼睛，这是我人生中，认认真真读完的第二本书，至于第一本书，当时情况比较杂，也比较久远，并且远没有这次的感悟至深</p><p>我好像开始喜欢这种感觉了，开始喜欢读书了</p><p>这是一个非常好的开始，我相信</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>闲来杂谈2</title>
      <link href="2019/10/22/xian-lai-za-tan-2/"/>
      <url>2019/10/22/xian-lai-za-tan-2/</url>
      
        <content type="html"><![CDATA[<p>这一篇是对《后来的我们》的补充，但并不是影评，而是我自己的感受</p><p>我一直在思考这个问题，“我到底想要的是什么”，也无关电影里的内容，是真真切切去问自己的内心，可能我现在仍没想到答案，但几近崩溃的情绪，让我觉得，我需要整理一下，再出发</p><p>现在的我开始认同这个观点，每个人都是一座孤岛；哪怕你是已经有了相爱的人，哪怕你已经结婚了，从某种意义上讲，真正懂你的只有你自己，没有人有这样的义务去了解你，去陪你闯荡世界，可能这就是作为一个成年人，该学会的东西</p><p>年龄的增长，不自觉的会开始羡慕那种自然而然的感情，“我见青山多妩媚，料青山见我应如是”，但，感情是一种稀有的东西，它甚至是一种很奢侈的东西，我们为此奔波、追逐、寻觅一生，直到我们累了，便也放弃了，当然不可否认，它是存在的</p><p>前些时间，我在抖音上看到一段话，据说，一个人厚着脸皮，没羞没臊爱着一个人的概率，一生只有一次，那么，你用完了吗；下面的评论特别多，“用完了，只感动了我自己”，“正在用，感觉我在死撑”，“再也没有了”，每个人都有这样的故事，看来，我也不是孤独的一个</p><p>在成年人的世界里，给感情增加了许多附属的东西，家庭、品行、三观、事业，都是考量一个人的标准，年龄的增长，我们也慢慢变的世俗，喜欢就成了那个最无足轻重的条件，所有的喜欢，最后都会输给合适，但就算如此，我还是很讨厌把感情当做各取所需，如果是那样，我宁可一直都是一个人</p><p>比起上一代人，我们更喜欢出去闯荡，去看看这个所谓的世界，家人们自然也是支持的，他们管这样叫做“出息”，之后，我们见识的多了，懂得多了，对于未来的生活也有了自己的想法，但我们活的更累了，每天好像有做不完的事情，梦想好像离我们越来越远，挤在人群里，慢慢地丢失了自己</p><p>我是很怕孤独的一类人，大学期间，我喜欢有人一起去吃饭，一起逃课，甚至取快递，那种独来独往的感觉真的很讨厌，也并不是对谁有特别依赖，只是不喜欢自己一个人，但，从几个月前，经常和我一起的室友搬出去住了，我突然发现孤独可能是以后的常态，一个人去图书馆，去餐厅，去实验室，我得承认，读研给我带来的最大的感受就是我的交际圈，一下子就小了很多，当我发现这些的时候，我没有闹，小孩子才会闹，我慢慢说服自己接受现在的状态，我告诉自己，人都是孤独的</p><p>孤独说到底还是一种很不好的感觉，时间久一些，心里会很憋屈，很想找个人说说话，哪怕是抱怨抱怨日常，吐槽一下周围，可是，一来，我在别人眼里总是一副积极乐观的样子，谁会相信这样的人说自己很孤独呢，二来，当我打开微信，把朋友圈从最上面一个一个划到下面，我很难找到一个能让我有勇气发消息的人，大家都很忙，凭什么别人就要听你在那里啰嗦啊</p><p>也并不是我做人很失败，我还算是擅长跟人交朋友，自小时候，家里就总说我眼里根本没有生人，甚至打出租车的时候，我都能和司机师傅畅聊一整路，性格使然，我不怎么树敌，只是，交心的朋友并不多，就好像一场舞台剧，台下的观众有很多，但懂得台上演员辛苦的观众并不多，道理就是这样，倘若不是交心的朋友，你去倾诉几句，回过头就被别人当做谈资，这样才是做人失败，写到这里，发自内心的感激一路陪我走来的好朋友、好兄弟们</p><p>所以，我也才选择找个地方，自己静下心，写写感受，写写对自己这些年的认知，并不会期许着有多少阅读、多少关注，以此来慢慢适应这样孤独的感觉吧</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>《后来的我们》影评</title>
      <link href="2019/10/21/hou-lai-de-wo-men-ying-ping/"/>
      <url>2019/10/21/hou-lai-de-wo-men-ying-ping/</url>
      
        <content type="html"><![CDATA[<p>其实，在写影评之前，我思考了挺久的，看完电影，心里挺复杂的，姑且不讨论这部电影的在大众视野中的评价如何，我只想说，我只写我自己的影评，我看完了一部电影，那这部电影给我的感受也就是我独有的，我的影评也只是想把这些感受写出来</p><p>后来的我们，林见清和方小晓，他们两个之间的故事称不上新颖，但是这种青春爱情的电影，从剧情上来说，好像的确想不到再有什么创新，可能没有车祸、打胎这种，就不算老套了吧</p><p>电影一开始就开始穿插两个场景，一个是现在的时间线，另一个是林见清和方小晓刚开始认识的时间线，故事也正是从火车停运，飞机停飞开始展开，这里导演将现在场景用黑白镜头展示，而为什么这么做，在电影后半段也告诉了我们，林见清说，如果伊恩找不到凯丽了，那他的世界就再也没有颜色了，当我看到那里的时候，突然明白了电影的手法，的确这部电影围绕着林见清叙述的更多，对于方小晓，好像她现在如何、家庭背景都是简单地说了说，可能导演认为，这样可以衬出女主是一个孤单、可怜的人，也就导致了好多人抱怨，这部电影再拍后来的林见清，而不是后来的我们</p><p>细细品味，的确不无道理，如果说抛开电影侧重的问题，电影中比较震撼的一个镜头是2009年春节，林见清和方小晓一起回家，林见清特地带了好多北京烤鸭去参加同学聚会，然后他的同学似乎并不领情，闲下交谈说林见清是一个特别装的人，结果，男主就很正常的喝多了，男主的父亲意味深长的跟方小晓说，你们明天回去吧，我赶紧给你们做一些吃的，虽然说林父是一个乡下人，但是他对生活看得还是十分透彻的，他看出了林见清的心事，可能回去北京，眼不见，心也就不烦了吧，在回家的路上，方小晓与林见清交谈的一席话，我认为也是整个电影很痛彻人心的一番话，这是他们俩第一次吵架，醉醺醺的林见清，一味抱怨自己无能，买不了车子，房子；小晓告诉他真的没关系，因为，他们只要在一起了，这些都不重要了</p><p>最后，他们在小晓一句怒吼“我他妈哪知道你想要什么，你得清楚自己到底想要什么啊”，他们暂停了争吵</p><p><img src="https://pic.rmb.bdstatic.com/bjh/e039668927f2b31acfc2fdaf9075aff2.png" alt="你得知道你到底自己想要什么"></p><p>电影看到这里，我被震撼到了，因为，这一幕，就很真实的展现出了一种恋爱中双方的思维方式，男生想着自己一定要有足够的本事，而女生却更多地觉得只要两个能够一起奋斗，做什么事都是有意义的，作为男生来讲，我甚至很理解林见清心里压力，他觉得小晓越是这么想，就越是对自己能力的否定，一个深爱着的男生，他这辈子最不能接受的，恐怕就是来自他心里的那个人的否定，这种错觉是致命的</p><p>一点点小矛盾日积月累，最终还是爆发了，小晓看着沉迷游戏的林见清，她决定离开，察觉到不对劲的林见清赶忙追了出去，跑了好久好久，终于在地铁里追到了小晓，地铁的门还开着，小晓站在车厢里，林见清在站台上，就是这么一瞬间，林见清犹豫了，他们就这么互相看着对方，好像，心里都明白</p><p><img src="https://pic.rmb.bdstatic.com/bjh/fa8a9e9a0d355f7838173beb4bd5898c.png" alt="如果当时你没走"></p><p>在现实的故事线中，林见清问小晓，如果，当时，你没有走，会不会就不一样了，小晓告诉他，如果当时，你上了地铁，我会跟你一辈子。可能这是电影里最扎心的一段对话了，这种五味杂陈的感觉真的很难表述，青春，就是这样奇怪的阶段，最幼稚的我们走到了一起，幻想着海枯石烂，最终却输给了现实，这种阴差阳错，成了内心最深最深的伤，现实没有如果，林见清有了自己的家庭，小晓，不知道她还在漂泊，又或是找到了可靠的那个人</p><p>引用一句歌评，值得一提的是，陈奕迅为这部电影献唱的《我们》，也为这部电影增色很多</p><p>“当时的他是最好的他，后来的我是最好的我。 可是最好的我们之间，隔了一整个青春。 怎么奔跑也跨不过的青春，只好伸出手道别。”</p><p>作为青春爱情电影，这部电影却道出了现实生活更真实的一面，很直击内心</p><p>影评到此结束，至于感悟，我确实该好好想想，什么才是我真正想要的</p>]]></content>
      
      
      <categories>
          
          <category> 影评 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 影评 </tag>
            
            <tag> 后来的我们 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>闲来杂谈</title>
      <link href="2019/10/17/xian-lai-za-tan/"/>
      <url>2019/10/17/xian-lai-za-tan/</url>
      
        <content type="html"><![CDATA[<p>一个年轻小伙子，正值大好时光，整天忧郁，像什么样子</p><p>前天晚上，我关注了一个公众号，是一个直系的学长，大我两届，就业选择了深圳</p><p>在他的公众号里面，虽然也有对生活、对工作的抱怨，不过，他称之为“闯关”，是的，在社会大学里面的每一步，都是闯关，在深圳工作，从最开始的租房子，一路摸爬滚打过来，似乎他仍保持着一颗积极的心</p><p>说实话，这有些触动我，在公众号里我简单地说了自己的情况，并说明自己想加他本人的微信，今天早上，我看到他在公众号里面回复了我，于是，我利索的复制，添加好友</p><p>对方同意的第一时间，我告诉他我最近比较迷茫，也不知道以后自己能做什么，学长告诉我，现阶段呢，不用太过于担心，好好利用大学的环境去学习，但不要狭隘地，只看到科研层面的学习</p><p>学长是一个非常非常自律的人，养生、画画、练字、养盆栽、写公众号，让我有些心生羡慕，他把自己每天的时间规划的井井有条，这要是放在以前，我会觉得这样的人，只有小说里会存在，学长说，他的这些爱好啊，习惯啊，都是在大学期间养成的，这些习惯坚持到现在也真的是受益匪浅</p><p>其实，我也想过，坚持做一个自律的人，每天少看手机，坚持自学嵌入式，尽量少吃垃圾食品，然而这些目标里面，有的坚持到现在，有的也没能坚持多久，说来倒是挺惭愧的，与学长的自律，根本不值一提</p><p>就我的看法，人生大几十年，只有短短三年用在研究生阶段，甚至来说，想在研究生阶段搞出多么厉害的成就，倒不如，让自己养成一些优秀的习惯，九把刀在小说里写“十年后，我连log是什么都不知道，但我依旧能活的很好”，今天倒是多了几分理解</p><p>我不是绝顶聪明的人，也并不指望着在学术上有什么造诣，但是，起码，我想我这辈子过得痛快，按照自己的想法活着，一直以来，我也是这样的人啊</p><p>我们都是努力活成普通人的样子，有时候，甚至连这样的想法都会感到疲惫，不禁感叹，为什么我这么艰难，而对于积极向上的人，他是能够保持乐观的心态，把这样繁杂的生活，当成是人生的关卡，一步一步闯关，苦中作乐，倒不失是一种好的人生态度</p><p>今日份感悟：向优秀的人看齐，你自己也朝着优秀迈进</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>《The Fault in Our Stars》影评</title>
      <link href="2019/10/15/the-fault-in-our-stars-ying-ping/"/>
      <url>2019/10/15/the-fault-in-our-stars-ying-ping/</url>
      
        <content type="html"><![CDATA[<img src="https://pic.rmb.bdstatic.com/bjh/299d765a81590723dddffcba53592252.png" alt="星愿里的错" style="zoom:50%;"><p>你相信命运吗</p><p>以前我也想骂过，命运这东西真他妈不公平，为什么别人看起来很轻易就能做到的事情，换做我却那么难，可是，这部电影带给我最大的感受，是在这个冷面、冷血近乎无情的世界上，似乎还存在着美好的事物</p><p>可能是我们总是对容易得到东西选择视而不见，对于身患绝症的人来说，健康地活着，就成了他们难以企及的梦想，哪怕就只是简单的出门买趟烟</p><p>最早的时候，我只是碰巧听到了这部电影的插曲《Boom Clap》，节奏欢快，甚至听起来，能感受得到恋爱中的那份甜美，当时我就在想，这该是什么神仙电影，能把插曲做的这么甜，而当我看了电影的简介，我觉得有些不敢看了，电影里男主女主竟然都是身患绝症的青少年，在那种甚至心智都尚未发育完全的年纪，在我们还在学校安心考虑高考的年纪，而故事的主人公却面临生死的问题，说实话，换做是我，我比较缺乏勇气，怕是整天躺在床上哀嚎</p><p>之后，我开始对电影情节进行想象，甚至我决定，我一定要和未来的那个她一起看，但是近来，由于心绪上一些变化，我决定看完这部可能对我有重要意义的电影，所谓不破不立，我期盼着看完电影我能想的更透彻一些，然而，事实上是否满足我所想，先写写看吧</p><p>电影讲述了两个身患绝症的孩子，两个人之间互相读对方最喜欢的书，讨论书中的内容，也可能是同病相怜，两人聊起天来，分外投机，按照正常的故事发展，摩擦出爱情的火花，一切都挺顺理成章，然而，对于他们来说，女主只能压抑心中的喜欢，她告诉男主，如果自己离去，自己的父母已经是够伤心的，所以她不想再徒增一个为她伤心难过的人，心里喜欢也就此止步，Just Friends，看到这里的时候，心里还是挺悲痛的，只是身体因素，便迫不得已做一些选择，压抑心中的喜欢，电影中，可以看出女主是经历过内心的挣扎，而不得不放弃，所以也格外让人心疼</p><p>男主当然并没有就此放弃，他发邮件联系女主喜欢的那个作家，当收到作家的回信时，女主非常高兴地问她的母亲，自己能去阿姆斯特丹吗，然后母亲告诉她因为家里面临的经济压力，可能去不了那么远，时间线继续推进，一天晚上，女主突然犯病，经过医院的奋力抢救，女主又活了下来，而男主一直在医院里等候着，医生告诉女主父母，可能要面临病情恶化的问题</p><p>可能也是得知自己所剩无几的生命，女主更想要去见自己喜欢的作家，男主告诉她，自己已经向精灵基金许愿并且得到了同意，所以资金不再是难题，就这样，男主和女主一家人一同去了阿姆斯特丹，原本满怀期待的去见自己喜爱的作家，然而那个作家却把女主和男主痛骂了一顿，这让女主非常绝望</p><p>之后，男主和女主来到了安娜的家（作家的那本小说中的人物原型）在听着房间里的广播，女主也想明白了要用剩下的生命去热爱，就这样，一个不完美的契机，看似并不完美的生命出现了交点，这也是这个电影最不让我揪心的镜头了</p><p>整个电影比较悲情在于故事最后，男主却先于女主离开了这个世界，有点出乎意料，但又有一点情理之中，在男主的葬礼上，女主心里很痛苦，甚至达到了自己的十级，但是在悼词中，也可以看得出来女主是想开了的，因为在所剩下短暂的生命里，他们热爱过，是幸福的</p><p>电影中表现手法很容易带入情感，演员表演张力也真的恰到好处，但这只是作为一部好电影最基础的评价，很值得自己细细去品味，我相信电影给我们每个人的启示意义也不尽相同</p><p>最后用一段抄来的话作为结尾吧</p><p>也许我们无法明白“活着”的意义，但是我们已经为“活着”付出了太多的代价；也许我们无法实现自己的梦想，但我们已经为梦想流下了太多泪水。我们能做的，仅仅是在这条路上走得更远，决不回头。天堂未必在前方，但地狱一定在身后。</p>]]></content>
      
      
      <categories>
          
          <category> 影评 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 影评 </tag>
            
            <tag> 星愿里的错 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《我和我的祖国》影评</title>
      <link href="2019/10/13/wo-he-wo-de-zu-guo-ying-ping/"/>
      <url>2019/10/13/wo-he-wo-de-zu-guo-ying-ping/</url>
      
        <content type="html"><![CDATA[<p>这种由不同故事串联起来的电影，是我第一次看到，加上这次是七十周年国庆节，在迈进电影院的时候，可以说是带着满腔热情，所以对电影的评价更加具备主观色彩</p><p>电影选择沿着我国从建国以来的时间线，记叙了在我国发生的重大事件背后的小故事，正是因为这些小故事对每个人物的细致描写，紧扣着那个时代的主题</p><p>电影首先记叙了开国大典上电动旗杆背后的设计师，比较感叹的是，身处于那样较为落后的时期，却能够保持对科学的严谨态度，这个短片比较震撼我的部分是，当发现是旗杆上的阻断球材料不行时，凌晨时分，连老大爷都排着队来问自己的烟袋锅子能不能用，电影演绎的非常有代入感，完美刻画了开国大典前夜那种激动和兴奋，以及背后工作人员的辛苦，正是有这样一个个默默付出的人们，也才有了中国现在的盛世</p><p>前篇讲了开国大典的前夜，紧接着便是一个强国梦，在第二个短片中，描写了一个科研工作者在执行国家保密项目（原子弹的研制工作）中，为了拯救大局，而牺牲自己身受大量核辐射，比较催泪的镜头是男主在公交车上遇到了多年前彼此有好感的女生，却因为自己身体原因只能假装不认识，更是点明了牺牲小我，而成就大我，成就国家的主题，短片由街上聚集越来越多的人高喊着“我国第一颗原子弹爆炸成功了”影片剧情来到高潮，看到这里，属实热泪盈眶，感叹这种隐姓埋名，甚至这种牺牲，也感叹中国现在的强大，该是有多少前辈用生命铺垫出来的</p><p>相比于前两个电影看起来比较深沉、正式，第三个微电影由徐峥导演，增添一些愉悦的氛围，讲述了中国女排奥运会上多冠的故事，但也没有直接围绕女排去讲，电影拍摄在上海，还是那种街头巷尾大爷大妈聊天的时代，说实话，作为一个90后，虽然并没有经历过那个时候，但还是很喜欢这样街头邻里都很和睦的关系，不同现在社会上，住在同一个公寓里，可能互相都不认识，与过去相比，的确是现代人该思考的问题吧，整个影片讲述了，正值中国女排和美国队决赛的一天，小男孩从体育老师那里听说，班里的小美就要出国，各种机缘巧合，使得男孩没能见到女孩临走前最后一面，这种小小的遗憾，在影院里倒是多一分预约</p><p>时间关系，我再写这篇影评的时候，已经过去了将近两周，电影的七个短片已经记不太清楚，但是当时在影院观影的时候，每个故事都很有感触，从不同的人物定位，叙说着个人和国家的关系，王菲翻唱《我和我的祖国》，独有的嗓音，真的是一下子就把思绪带入了电影，作为爱国教育电影，真的，看完之后，深深感觉中国发展的迅速及中国现在的强大，作为一名研究生呢，当以振兴中华为己任，努力读书，方不辜负前人的期盼</p><p>有一句话，在抖音上看到的，是国庆前夕，国家某个部分发言人说道，1949年的开国大典上，全国只有15架飞机，周总理命令飞两边，现在我们强大了，飞机再也不用飞两边了，这盛世，如您所愿</p><p>是啊，盛世，如您所愿</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>《中国机长》影评</title>
      <link href="2019/10/10/zhong-guo-ji-chang-ying-ping/"/>
      <url>2019/10/10/zhong-guo-ji-chang-ying-ping/</url>
      
        <content type="html"><![CDATA[<p>这部电影给我最大的惊喜是它作为一部商业片，其评分竟不输于国庆献礼爱国教育电影《我和我的祖国》，电影主要内容讲述了发生在去年四川航空8633航班在执行从重庆飞往拉萨的任务时，机长驾驶舱的前挡风玻璃破碎，而机长凭着多年的飞行经验，以及地面管控中心多方协作，最终控制飞机平稳着陆</p><p>尽管是一部商业电影，但其向观众展示了飞机在起飞前所有的准备工作，我觉得这也是向观众进行普及行业知识，出于对一个陌生行业的好奇，这部分准备工作在电影中并不显得突兀，并且前面对于刘机长的一些描写也是为后面飞机出事后，刘机长能够在极其恶劣的环境下坚持控制住飞机做了较好的铺垫</p><p>除刘机长以外，对其余机组人员的刻画描写也是相当充实，个性鲜明的特点，以及在发生突发事件之后的应对，可以看的出来整个机组人员是非常冷静的，我认为这是对所有飞行在一线的机组人员的致敬，是他们工作的一个缩影，就像现实中刘机长在新闻发布会中沉着冷静地说出“我觉得英雄机长这份荣誉是属于飞行在一线的所有人”</p><p>当然，这部电影中也是有看的比较懵的部分，关晓彤所饰的航空爱好者的角色，这部分内容会有一些出戏，可能是我生活中也并未接触过这样的人，所以对于这样的角色会有一种陌生感</p><p>对于中国商业片的思考，有前面《上海堡垒》的教训，相信电影界里也认识到了，只凭流量明星，人气IP，甚至蹭热门电影种类的热度，是不行的，国内的观众对于电影的品味在上升，而这部电影取材于真是事件，将飞机上那种紧张，恐慌拍的淋漓尽致，实属不易，换个角度想想，真实在飞机上的人们当时的状态尤有过之而无不及</p><p>（Ps 看完不敢坐飞机了）</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>《头号玩家》影评</title>
      <link href="2019/10/09/tou-hao-wan-jia-ying-ping/"/>
      <url>2019/10/09/tou-hao-wan-jia-ying-ping/</url>
      
        <content type="html"><![CDATA[<p><img src="https://upload-images.jianshu.io/upload_images/17176430-01d7b5ebb0e4d72e.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/828/format/webp" alt="img"></p><p>游戏世界无穷无尽，只有现实才是唯一，可能这是电影给我最大的感受，从寻找游戏彩蛋开始，主角一步步发现游戏公司幕后的一些阴谋，电影整体情节起承转合，衔接紧密；画面配色及背景音乐选用比较严格，可以看出导演在整部电影中下足了功夫，高分电影当之无愧，只是电影结尾匆匆写过主角接手游戏管理后，做出的一些改变，不够引人深思，看完电影更多地是回味电影中某个精彩、炫酷的场景，而不是对电影启发的道理进行思考，这一点，电影在深度上做的略有欠缺。</p><p>前些天，听一个招聘会，公司的CEO说，在未来，九成的人们将会沉浸在虚拟世界中，一成的人是在开发这样的虚拟世界；我觉得这句话是对电影的直接描述，而我看完电影的感觉也是能够想到这个问题，沉迷游戏能给我们带来什么，只是去做了未来九成人都在做的事情，不想成为大多数，但却做着甘心沉沦的事情，属实不该。</p><p>现实才是唯一，不该因为怕与人交流，而不去交流，周围的人，亲人、老师、师兄、朋友，才是真真切切陪在身边的，它不需要怎么费力去证明，只是一顿简单的饭菜，就是虚拟世界无论如何都不能代替的事情，也许，再进行引申一下，除了虚拟世界之外，你是不是因为工作或事业，而忽略了更重要的事情呢？</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>《太平轮》影评</title>
      <link href="2019/10/08/tai-ping-lun-ying-ping/"/>
      <url>2019/10/08/tai-ping-lun-ying-ping/</url>
      
        <content type="html"><![CDATA[<p>一口气看了太平轮的上下两部，再听李健的那首《假如爱有天意》，更加能触碰到泪点，压制不住总想说点什么的冲动，所以来写写自己的感受。</p><p>和专业的评论还差很多，我也不想去评论这部电影是如何的糟糕，但是就个人来看，应一句话，存在即合理。有人说，导演自认为每一场都很好，不舍得剪掉。我也能理解，因为从整体看，电影的确是每一个镜头都很美，每一件事都是对人物的细致刻画，在一个战火纷飞，社会动荡不安的年代，小人物的存在，这本身就很卑微，卑微到想活下去都是身不由己，这一点可以在于真的刻画中看出，可以说电影里，她的戏份很足。在她反击暴打袁皮特时，可以看出她的无奈，她的内心活动。于真也说的上是整部电影中最苦情的人物。“与其把生命交给战争，不如献给爱情”我想电影想告诉我们的就是这句话吧，雷义方在面对战争失败，拼命也去拿回他和蕴芬的合照，“只要想到你，我的内心都是平静的”，另一个镜头是在《太平轮彼岸》中，严泽坤为了救一个孩子，被人用刀刺中心脏，在濒临死亡，将要沉入海底时，电影却出现了，他和雅子在海中对视的画面，画面很美，无论是严泽坤的幻觉，还是电影刻意的手法，都可以看出严泽坤内心的平静。电影歌颂了战争中的爱情，完美的呈献给了观众，就这一点，电影是成功的。</p><p>三个爱情故事，三条爱情线索，因为太平轮，因为战争，汇聚在一起，假如爱有天意，一点点就好，命如草芥，如何开出绚烂的花朵，方不负这尚存的一生？</p><p>乱世浮生，佳期如梦，还看今朝。</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
